<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2020 XEBIALABS

    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

-->
<synthetic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.xebialabs.com/deployit/synthetic" xsi:schemaLocation="http://www.xebialabs.com/deployit/synthetic synthetic.xsd">

    <type type="helm.Client" extends="generic.Container">
        <property name="home" default="/usr/local/bin"/>
        <property name="helmConfig" required="false" description="Location of your Helm config. Overrides $HELM-HOME"/>
        <property name="helmHost" required="false" description="Address of Tiller. Overrides $HELM-HOST"/>
        <property name="kubeContext" required="false" description="Name of the kubeconfig context to use"/>
        <property name="kubeConfig" required="false" description="Absolute path of the kubeconfig file to be used"/>
        <property name="insecureConnection" category="Advanced" kind="boolean" default="false" required="false"/>
        <property name="debug" category="Advanced" kind="boolean" default="false" required="false"/>
        <property name="version" category="Advanced" kind="enum" default="3" required="false">
            <enum-values>
                <value>2</value>
                <value>3</value>
            </enum-values>
        </property>
        <property name="useClusterConfiguration" category="Advanced" kind="boolean" default="false" required="false"/>

        <property name="username" required="false" category="Authentication"/>
        <property name="password" required="false" password="true" category="Authentication"/>
        <property name="caFile" required="false" category="Authentication"/>
    </type>

    <type-modification type="k8s.Master">
        <property name="helmClient" kind="ci" required="false" referenced-type="helm.Client" category="Helm"/>
    </type-modification>

    <type-modification type="openshift.Server">
        <property name="helmClient" kind="ci" required="false" referenced-type="helm.Client" category="Helm"/>
    </type-modification>

    <type type="helm.K8SRelease" extends="udm.BaseDeployed" container-type="k8s.Namespace" deployable-type="helm.Chart">
        <property name="chartName"/>
        <property name="chartVersion"/>
        <property name="repositoryUrl" description="url for the Helm repository" required="false" category="Repository"/>
        <property name="updateRepositories" kind="boolean" default="true" required="false" description="if true the helm repo will be updated" category="Repository"/>
        <property name="configurationFiles" kind="set_of_ci" referenced-type="helm.AppliedConfigFile" as-containment="true"/>
        <property name="testRelease" kind="boolean" default="true" required="false"/>
        <property name="inputVariables" kind="map_string_string" required="false" description="Input variables to be used in the Helm  configuration."/>
        <property name="secretInputVariables" kind="map_string_string" password="true" required="false" description="Secret input simple (int,string) variables to be used in the Helm configuration."/>
    </type>

    <type type="helm.AppliedConfigFile" extends="udm.EmbeddedDeployedArtifact" container-type="helm.Release" deployable-type="helm.ConfigFile">
        <generate-deployable type="helm.ConfigFile" extends="udm.EmbeddedDeployableArtifact"/>
    </type>

    <type type="helm.Chart" extends="udm.BaseDeployable">
        <property name="chartName"/>
        <property name="chartVersion"/>
        <property name="repositoryUrl" description="url for the Helm repository" required="false" category="Repository"/>
        <property name="updateRepositories" kind="boolean" default="true" required="false" description="if true the helm repo will be updated" category="Repository"/>
        <property name="configurationFiles" kind="set_of_ci" referenced-type="helm.ConfigFile" as-containment="true"/>
        <property name="testRelease" kind="boolean" default="true" required="false"/>
        <property name="inputVariables" kind="map_string_string" required="false" description="Input variables to be used in the Helm  configuration."/>
        <property name="secretInputVariables" kind="map_string_string" password="true" required="false" description="Secret input simple (int,string) variables to be used in the Helm configuration."/>
    </type>

    <type-modification type="helm.ConfigFile">
        <property name="textFileNamesRegex" hidden="true" default=".+\.(cfg | conf | config | ini | properties | yaml | txt | yml | json )"/>
    </type-modification>

    <type type="helm.OpenshiftRelease" extends="udm.BaseDeployed" container-type="openshift.Project" deployable-type="helm.Chart">
        <property name="chartName"/>
        <property name="chartVersion"/>
        <property name="repositoryUrl" description="url for the Helm repository" required="false" category="Repository"/>
        <property name="updateRepositories" kind="boolean" default="true" required="false" description="if true the helm repo will be updated" category="Repository"/>
        <property name="configurationFiles" kind="set_of_ci" referenced-type="helm.AppliedConfigFile" as-containment="true"/>
        <property name="testRelease" kind="boolean" default="true" required="false"/>
        <property name="inputVariables" kind="map_string_string" required="false" description="Input variables to be used in the Helm  configuration."/>
        <property name="secretInputVariables" kind="map_string_string" password="true" required="false" description="Secret input simple (int,string) variables to be used in the Helm configuration."/>
    </type>

    <type-modification type="openshift.Server">
        <property name="helmClient" kind="ci" required="false" referenced-type="helm.Client" category="Helm"/>
    </type-modification>

</synthetic>
